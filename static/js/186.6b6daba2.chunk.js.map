{"version":3,"file":"static/js/186.6b6daba2.chunk.js","mappings":"mPA6CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAiB,mCAAG,6GAEHC,EAAAA,GAAoBP,GAFjB,OAEhBQ,EAFgB,OAGtBJ,EAAWI,EAAKC,SAHM,gDAKtBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,QAArB,gBAA4C,CAC1CC,mBAAAA,EAAAA,IAPoB,yDAAH,qDAWvBR,GACD,GAAE,CAACN,IAECG,GAKH,wBACGA,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC3B,OACE,2BACE,oCAAYA,MACZ,uBAAID,MAFGD,EAKZ,MAZI,IAeV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'components/FetchApi';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { notificationParams } from '../../settings/settings';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [coments, setcoments] = useState(null);\n\n  useEffect(() => {\n    // loader = true\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await API.getMovieReviews(movieId);\n        setcoments(data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error(`${error.message}. Try again.`, {\n          notificationParams,\n        });\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!coments) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {coments.map(({ id, content, author }) => {\n        return (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","coments","setcoments","useEffect","fetchMovieDetails","API","data","results","console","log","toast","message","notificationParams","map","id","content","author"],"sourceRoot":""}