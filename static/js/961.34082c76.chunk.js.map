{"version":3,"file":"static/js/961.34082c76.chunk.js","mappings":"iRA4FA,UApFqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAkBjB,IAhBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAmB,mCAAG,6GAELC,EAAAA,GAAoBN,GAFf,OAElBO,EAFkB,OAGxBR,EAASQ,GAHe,gDAKxBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,QAArB,gBAA4C,CAC1CC,mBAAAA,EAAAA,IAPsB,yDAAH,qDAWzBP,GACD,GAAE,CAACL,KAECF,EACH,OAAO,KAGT,IACEe,EAMEf,EANFe,OACAC,EAKEhB,EALFgB,aACAC,EAIEjB,EAJFiB,eACAC,EAGElB,EAHFkB,SACAC,EAEEnB,EAFFmB,YACAC,EACEpB,EADFoB,aAGIC,GAAW,OAAON,GAClBO,EAAiBC,KAAKC,MAAqB,GAAfR,GAElC,OACE,6BACE,SAAC,KAAD,CAAMS,GAAE,oBAAErB,EAASsB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAlC,6BACA,iBAAKC,MAAO,CAAEC,QAAS,QAAvB,WACE,0BACE,gBACEC,IACEX,EACI,kCAAoCA,EACpCY,EAENC,IAAKf,OAGT,4BACE,0BACGA,EADH,KACqBG,EAAaa,MAAM,EAAG,GAD3C,QAGA,wCAAgBX,EAAhB,QACA,sCACA,uBAAIJ,KACJ,oCACA,wBACGG,EAAYa,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACtB,OACE,yBACE,uBAAIA,KADGD,EAIZ,aAIP,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAE,OAAR,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAE,UAAR,2BAGJ,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as API from 'components/FetchApi';\nimport { useState } from 'react';\nimport imgNotFound from '../../images/imgNotFound.png';\nimport { toast } from 'react-toastify';\nimport { notificationParams } from '../../settings/settings';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    // loader = true\n    const fetchTrendingMovies = async () => {\n      try {\n        const data = await API.getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error)\n        toast.error(`${error.message}. Try again.`, {\n          notificationParams,\n        });\n      }\n    };\n    fetchTrendingMovies();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const {\n    genres,\n    vote_average,\n    original_title,\n    overview,\n    poster_path,\n    release_date,\n  } = movie;\n\n  const movieGenres = [...genres];\n  const movieUserScore = Math.round(vote_average * 10);\n\n  return (\n    <main>\n      <Link to={location.state?.from ?? '/movies'}>‚Üê go back</Link>\n      <div style={{ display: 'flex' }}>\n        <div>\n          <img\n            src={\n              poster_path\n                ? 'https://image.tmdb.org/t/p/w300' + poster_path\n                : imgNotFound\n            }\n            alt={original_title}\n          />\n        </div>\n        <div>\n          <h3>\n            {original_title} ({release_date.slice(0, 4)})\n          </h3>\n          <p>User Score: {movieUserScore}%</p>\n          <h4>Overview</h4>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {movieGenres.map(({ id, name }) => {\n              return (\n                <li key={id}>\n                  <p>{name}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to={`cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`reviews`}>Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","fetchTrendingMovies","API","data","console","log","toast","message","notificationParams","genres","vote_average","original_title","overview","poster_path","release_date","movieGenres","movieUserScore","Math","round","to","state","from","style","display","src","imgNotFound","alt","slice","map","id","name"],"sourceRoot":""}